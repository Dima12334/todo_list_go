basePath: /api/v1/
definitions:
  v1.categoryResponse:
    properties:
      color:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  v1.createCategoryInput:
    properties:
      color:
        enum:
        - red
        - blue
        - yellow
        - purple
        - green
        - brown
        type: string
      description:
        maxLength: 255
        minLength: 0
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - description
    - title
    type: object
  v1.createTaskInput:
    properties:
      category_id:
        type: string
      completed:
        type: boolean
      description:
        maxLength: 255
        minLength: 0
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    required:
    - category_id
    - title
    type: object
  v1.errorBodyResponse:
    properties:
      details: {}
      type:
        enum:
        - string
        - dict
        type: string
    type: object
  v1.errorResponse:
    properties:
      error:
        $ref: '#/definitions/v1.errorBodyResponse'
    type: object
  v1.signInUserInput:
    properties:
      email:
        maxLength: 255
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.signUpUserInput:
    properties:
      email:
        maxLength: 255
        type: string
      name:
        maxLength: 255
        minLength: 2
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  v1.taskResponse:
    properties:
      category:
        $ref: '#/definitions/v1.categoryResponse'
      completed:
        type: boolean
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
    type: object
  v1.updateCategoryInput:
    properties:
      color:
        enum:
        - red
        - blue
        - yellow
        - purple
        - green
        - brown
        type: string
      description:
        maxLength: 255
        minLength: 0
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    type: object
  v1.updateTaskInput:
    properties:
      category_id:
        type: string
      completed:
        type: boolean
      description:
        maxLength: 255
        minLength: 0
        type: string
      title:
        maxLength: 255
        minLength: 1
        type: string
    type: object
  v1.userMeResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for ToDo List app
  title: ToDO List API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: get categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.categoryResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: create category
      parameters:
      - description: category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createCategoryInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.categoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: delete category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: update category
      parameters:
      - description: category id
        in: path
        name: id
        required: true
        type: string
      - description: update category info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.updateCategoryInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.categoryResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Category
      tags:
      - categories
  /tasks:
    get:
      consumes:
      - application/json
      description: get tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/v1.taskResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: create task
      parameters:
      - description: task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.createTaskInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.taskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      consumes:
      - application/json
      description: delete task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Task
      tags:
      - tasks
    get:
      consumes:
      - application/json
      description: get task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.taskResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Task
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: update task
      parameters:
      - description: task id
        in: path
        name: id
        required: true
        type: string
      - description: update task info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.updateTaskInput'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.taskResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Task
      tags:
      - tasks
  /users/me:
    get:
      consumes:
      - application/json
      description: get current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userMeResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get me
      tags:
      - users
  /users/sign-in:
    post:
      consumes:
      - application/json
      description: login user
      parameters:
      - description: user credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.signInUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: SignIn
      tags:
      - users
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: create user
      parameters:
      - description: user info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.signUpUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: SignUp
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
